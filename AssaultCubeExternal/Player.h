#pragma once

#include "Process.h"
#include "MemAddr.h"
#include "Gun.h"

class Player
{
private:
	MemAddr<int> mHealth;
	MemAddr<int> mArmor;
	Gun mPistol;
	Gun mCarabine;
	Gun mShotgun;
	Gun mSmg;
	Gun mSniperRifle;
	Gun mAssaultRifle;
	MemAddr<int> mGrenades;
	MemAddr<int> mGrenadesThrown;
	MemAddr<int> mDamageTaken;
	MemAddr<BYTE> mIsAttacking;
public:
	Player(Process& process) :
		mHealth(process, { 0x1C, 0xCD0, 0xA4, 0x6C, 0x1E8 }, 100),
		mArmor(process, { 0x1C, 0xCD0, 0xA4, 0x6C, 0x1EB }, 100),
		mPistol(process,
			{ 0x1C, 0xCD0, 0xA4, 0x6C, 0x238 },
			{ 0x1C, 0xCD0, 0xA4, 0x6C, 0x208 },
			{ 0x1C, 0xCD0, 0xA4, 0x6C, 0x27C },
			{ 0x1C, 0xCD0, 0xA4, 0x6C, 0x254 },
			20, 60, 0, 0),
		mCarabine(process,
			{ 0x1C, 0xCD0, 0xA4, 0x6C, 0x23C },
			{ 0x1C, 0xCD0, 0xA4, 0x6C, 0x20C },
			{ 0x1C, 0xCD0, 0xA4, 0x6C, 0x280 },
			{ 0x1C, 0xCD0, 0xA4, 0x6C, 0x258 },
			20, 60, 0, 0),
		mShotgun(process,
			{ 0x1C, 0xCD0, 0xA4, 0x6C, 0x234 },
			{ 0x1C, 0xCD0, 0xA4, 0x6C, 0x210 },
			{ 0x1C, 0xCD0, 0xA4, 0x6C, 0x284 },
			{ 0x1C, 0xCD0, 0xA4, 0x6C, 0x25C },
			20, 60, 0, 0),
		mSmg(process,
			{ 0x1C, 0xCD0, 0xA4, 0x6C, 0x238 },
			{ 0x1C, 0xCD0, 0xA4, 0x6C, 0x214 },
			{ 0x1C, 0xCD0, 0xA4, 0x6C, 0x288 },
			{ 0x1C, 0xCD0, 0xA4, 0x6C, 0x260 },
			20, 60, 0, 0),
		mSniperRifle(process,
			{ 0x1C, 0xCD0, 0xA4, 0x6C, 0x23C },
			{ 0x1C, 0xCD0, 0xA4, 0x6C, 0x214 },
			{ 0x1C, 0xCD0, 0xA4, 0x6C, 0x28C },
			{ 0x1C, 0xCD0, 0xA4, 0x6C, 0x264 },
			20, 60, 0, 0),
		mAssaultRifle(process, 
			{ 0x1C, 0xCD0, 0xA4, 0x6C, 0x240 }, 
			{ 0x1C, 0xCD0, 0xA4, 0x6C, 0x218 }, 
			{ 0x1C, 0xCD0, 0xA4, 0x6C, 0x290 }, 
			{ 0x1C, 0xCD0, 0xA4, 0x6C, 0x268 }, 
			20, 60, 0, 0),
		mGrenades(process, { 0x1C, 0xCD0, 0xA4, 0x6C, 0x248 }, 3),
		mGrenadesThrown(process, { 0x1C, 0xCD0, 0xA4, 0x6C, 0x298 }, 0),
		mDamageTaken(process, { 0x1C, 0xCD0, 0xA4, 0x6C, 0x2C0 }, 0),
		mIsAttacking(process, { 0x1C, 0xCD0, 0xA4, 0x6C, 0x314 }, 1)
	{

	}

	MemAddr<int>* getHealth() { return &mHealth; }
	MemAddr<int>* getArmor() { return &mArmor; }
	Gun* getAssaultRifle() { return &mAssaultRifle; }
	MemAddr<int>* getGrenades() { return &mGrenades; }
	MemAddr<int>* getGrenadesThrown() { return &mGrenadesThrown; }
	MemAddr<int>* getDamageTaken() { return &mDamageTaken; }
	MemAddr<BYTE>* getAttacking() { return &mIsAttacking; }
};